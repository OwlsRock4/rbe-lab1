# ---------------------------------------------------------------------------- #
#                                                                              #
# 	Module:       main.py                                                      #
# 	Author:       slafl                                                        #
# 	Created:      1/17/2025, 5:02:42 PM                                        #
# 	Description:  V5 project                                                   #
#                                                                              #
# ---------------------------------------------------------------------------- #

# A basic example of commanding the robot to drive forward and backward with the press of a button.
# Library imports
from vex import *

# define the states
IDLE = 0
DRIVING_FWD = 1
DRIVING_BKWD = 2

# start out in the idle state
current_state = IDLE

# Define the brain
brain=Brain()

# Motors
left_motor = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)
right_motor = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)
arm = Motor(Ports.PORT8, GearSetting.RATIO_18_1, False)

# Controller
controller = Controller()

# Distance in cm
distance = 100
# Speed in cm/s
speed = 10
c = math.pi * 2 * 5
t = (5 * distance) / c 
s = (60 * speed * 5) / c

startAngle = 381.6
endAngle = 443.6

def handleLeft1Button():
    global current_state
    arm.set_position(0, DEGREES)
    arm.spin_for(FORWARD, startAngle, DEGREES, s, RPM, wait = True)
    if(current_state == IDLE):
        print('IDLE -> FORWARD')
        current_state = DRIVING_FWD
        # Note how we set the motor to drive here, just once.
        # No need to call over and over and over in a loop.
        # Also, note that we call the non-blocking version so we can
        # return to the main loop.
        left_motor.spin_for(REVERSE, t, TURNS, s, RPM, wait = False)
        right_motor.spin_for(REVERSE, t, TURNS, s, RPM, wait = False)
    else: # in any other state, the button acts as a kill switch
        print(' -> IDLE')
        current_state = IDLE
        left_motor.stop()
        right_motor.stop()

wasMoving = False
def checkMotionComplete():
    global wasMoving
    retVal = False
    isMoving = left_motor.is_spinning() or right_motor.is_spinning()
    if(wasMoving and not isMoving):
        retVal = True
    wasMoving = isMoving
    return retVal

# Then we declare a handler for the completion of the motion.
def handleMotionComplete():
    global current_state
    if(current_state == DRIVING_FWD):
        left_motor.stop()
        right_motor.stop()
        # Untested
        previousT = 0
        arm.spin_for(FORWARD, endAngle-startAngle, DEGREES, s, RPM, wait = False)
        while True: 
            if(arm.torque() > previousT):
                brain.screen.print(arm.torque())
                brain.screen.new_line()
            else:
                brain.screen.print(previousT)
                brain.screen.new_line()
            previousT = arm.torque()
            wait(50)

    elif(current_state == DRIVING_BKWD):
        current_state = IDLE
    else:
        print('E-stop') # Should print when button is used as E-stop

controller.buttonL1.pressed(handleLeft1Button)

# The main loop
while True:
    if (checkMotionComplete()): handleMotionComplete()
